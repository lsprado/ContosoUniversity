trigger:
- none

pool:
  vmImage: 'windows-latest'

variables:
  buildConfiguration: 'Release'

stages:
- stage: Build
  displayName: Build 
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: windows-latest
    steps:
    - task: DotNetCoreCLI@2
      displayName: Restore
      inputs:
        command: restore
        projects: '**/*.csproj'
    - task: DotNetCoreCLI@2
      displayName: Build
      inputs:
        projects: '**/*.csproj'
        arguments: '--configuration $(BuildConfiguration)'
    - task: DotNetCoreCLI@2
      displayName: Test
      inputs:
        command: test
        projects: '**/*ContosoUniversity.Test/*.csproj'
        arguments: '--configuration $(BuildConfiguration)'
    - task: DotNetCoreCLI@2
      displayName: Publish
      inputs:
        command: 'publish'
        publishWebProjects: true
        arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'
    - task: PublishBuildArtifacts@1
      displayName: Artifact
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'
- stage: Deploy
  displayName: Deploy 
  dependsOn: Build
  condition: succeeded()
  jobs:
  - job: Deploy
    displayName: Deploy
    pool:
      vmImage: windows-latest
    
    steps:
    - task: DownloadPipelineArtifact@2
      displayName: Download Artifact
      inputs:
        artifact: drop

    # - task: AzureRmWebAppDeployment@4
    #   inputs:
    #     ConnectionType: 'AzureRM'
    #     azureSubscription: 'MS Internal'
    #     appType: 'webApp'
    #     WebAppName: 'ContosoUniversityExample'
    #     packageForLinux: '$(Pipeline.Workspace)/**/*.zip'

- stage: LoadTest
  displayName: Load Test
  dependsOn: Deploy
  condition: succeeded()
  jobs:
  - job: LoadTest
    displayName: Load Test
    pool:
      vmImage: ubuntu-latest
    steps:
    
    - task: AzureLoadTest@1
      displayName: Run Azure Load Test
      inputs:
        azureSubscription: 'MS Internal'
        loadTestConfigFile: 'SampleApp.yaml'
        resourceGroup: 'RG_ContosoUniversity'
        loadTestResource: 'contosoloadtest'
          
    - publish: $(System.DefaultWorkingDirectory)/loadTest
      artifact: results
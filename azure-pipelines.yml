trigger:
- none

pool:
  vmImage: 'windows-2019'

variables:
  BuildConfiguration: 'Release'
  BuildPlatform: 'any cpu'
  WebAppName: 'ase-ContosoUniversityAPP'
  WebApiName: 'ase-ContosoUniversityAPI'

stages:
- stage: infra
  jobs:
  - job: run_infra
    displayName: create infra
    steps:
    - task: AzureResourceManagerTemplateDeployment@3
      inputs:
        deploymentScope: 'Resource Group'
        azureResourceManagerConnection: 'MS Internal'
        subscriptionId: '3323e547-1651-47e7-a768-6931436e3314'
        action: 'Create Or Update Resource Group'
        resourceGroupName: 'RG_ContosoUniversity'
        location: 'East US'
        templateLocation: 'Linked artifact'
        csmFile: 'ContosoUniversity.AzureResourceGroup/ARMTemplates/WebSite.json'
        csmParametersFile: 'ContosoUniversity.AzureResourceGroup/ARMTemplates/WebSite.parameters.json'
        deploymentMode: 'Incremental'

- stage: build
  dependsOn: infra
  jobs:
  - job: run_build
    displayName: run build
    steps:
    - task: UseDotNet@2
      displayName: 'Use dotnet 3.1'
      inputs:
        version: 3.1.x

    - task: UseDotNet@2
      displayName: 'Use dotnet 6.0'
      inputs:
        version: 6.0.x

    - task: DotNetCoreCLI@2
      displayName: Restore
      inputs:
        command: restore
        projects: '**/*.csproj'

    - task: DotNetCoreCLI@2
      displayName: Build
      inputs:
        projects: '**/*.csproj'
        arguments: '--configuration $(BuildConfiguration)'

    - task: VSBuild@1
      displayName: 'Build solution ContosoUniversity.CodedUITest/ContosoUniversity.CodedUITest.csproj'
      inputs:
        solution: ContosoUniversity.CodedUITest/ContosoUniversity.CodedUITest.csproj
        platform: '$(BuildPlatform)'
        configuration: '$(BuildConfiguration)'

    - task: DotNetCoreCLI@2
      displayName: Test
      inputs:
        command: test
        projects: '**/*ContosoUniversity.Test/*.csproj'
        arguments: '--configuration $(BuildConfiguration)'

    - task: DotNetCoreCLI@2
      displayName: Publish
      inputs:
        command: publish
        publishWebProjects: True
        arguments: '--configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory)/WebApp'
        zipAfterPublish: True

    - task: CopyFiles@2
      displayName: 'Copy Files to: ArmTemplates'
      inputs:
        SourceFolder: 'ContosoUniversity.AzureResourceGroup'
        Contents: '**\*.json'
        TargetFolder: '$(build.artifactstagingdirectory)/ArmTemplates'

    - task: CopyFiles@2
      displayName: 'Copy Files to: Scripts'
      inputs:
        SourceFolder: Scripts
        TargetFolder: '$(build.artifactstagingdirectory)/Scripts'

    - task: CopyFiles@2
      displayName: 'Copy Files to: CodedUITest'
      inputs:
        SourceFolder: '$(Build.SourcesDirectory)\ContosoUniversity.CodedUITest\bin\$(BuildConfiguration)\netcoreapp3.1'
        Contents: '**\*'
        TargetFolder: '$(build.artifactstagingdirectory)/CodedUITest'

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact WebApp'
      inputs:
        PathtoPublish: '$(build.artifactstagingdirectory)/WebApp'
        ArtifactName: WebApp

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact ArmTemplates'
      inputs:
        PathtoPublish: '$(build.artifactstagingdirectory)/ArmTemplates'
        ArtifactName: ArmTemplates

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact Scripts'
      inputs:
        PathtoPublish: '$(build.artifactstagingdirectory)/Scripts'
        ArtifactName: Scripts

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact CodedUITest'
      inputs:
        PathtoPublish: '$(build.artifactstagingdirectory)/CodedUITest'
        ArtifactName: CodedUITest
    
    - task: MicrosoftSecurityDevOps@1
      displayName: 'Run Microsoft Security DevOps'

- stage: deploy_dev
  dependsOn: build
  jobs:
  - deployment: DeployDev
    displayName: deploy to dev
    variables:
      Infos.Ambiente: 'DEV'
      Api.Address: 'https://$(WebApiName)-dev.azurewebsites.net'
      ConnectionStrings.ContosoUniversityAPIContext: 'Server=tcp:contosouniversityexampleserver.database.windows.net,1433;Initial Catalog=contosouniversity;Persist Security Info=False;User ID=leandro;Password=#P@ssw0rd2022#;MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;'
      Infos.Versao: $(Build.BuildNumber)
    environment: 'contosouniversity-dev'
    strategy:
      runOnce:
        deploy:
          steps:
          - download: current
            artifact: WebApp

          - task: AzureRmWebAppDeployment@4
            displayName: 'ContosoUniversityExample Api'
            inputs:
              azureSubscription: 'MS Internal'
              WebAppName: $(WebApiName)
              deployToSlotOrASE: true
              ResourceGroupName: 'RG_ContosoUniversity'
              SlotName: dev
              packageForLinux: '$(Pipeline.Workspace)/WebApp/ContosoUniversity.API.zip'
              JSONFiles: '**/appsettings.json'
          
          - task: AzureRmWebAppDeployment@4
            displayName: 'ContosoUniversityExample WebApp'
            inputs:
              azureSubscription: 'MS Internal'
              WebAppName: $(WebAppName)
              deployToSlotOrASE: true
              ResourceGroupName: 'RG_ContosoUniversity'
              SlotName: dev
              packageForLinux: '$(Pipeline.Workspace)/WebApp/ContosoUniversity.WebApplication.zip'
              JSONFiles: '**/appsettings.json'

- stage: deploy_hml
  dependsOn: deploy_dev
  jobs:
  - deployment: DeployDev
    displayName: deploy to hml
    variables:
      Infos.Ambiente: 'HML'
      Api.Address: 'https://$(WebApiName)-qa.azurewebsites.net'
      ConnectionStrings.ContosoUniversityAPIContext: 'Server=tcp:contosouniversityexampleserver.database.windows.net,1433;Initial Catalog=contosouniversity;Persist Security Info=False;User ID=leandro;Password=#P@ssw0rd2022#;MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;'
      Infos.Versao: $(Build.BuildNumber)
    environment: 'contosouniversity-qa'
    strategy:
      runOnce:
        deploy:
          steps:
          - download: current
            artifact: WebApp

          - task: AzureRmWebAppDeployment@4
            displayName: 'ContosoUniversityExample Api'
            inputs:
              azureSubscription: 'MS Internal'
              WebAppName: $(WebApiName)
              deployToSlotOrASE: true
              ResourceGroupName: 'RG_ContosoUniversity'
              SlotName: qa
              packageForLinux: '$(Pipeline.Workspace)/WebApp/ContosoUniversity.API.zip'
              JSONFiles: '**/appsettings.json'
          
          - task: AzureRmWebAppDeployment@4
            displayName: 'ContosoUniversityExample WebApp'
            inputs:
              azureSubscription: 'MS Internal'
              WebAppName: $(WebAppName)
              deployToSlotOrASE: true
              ResourceGroupName: 'RG_ContosoUniversity'
              SlotName: qa
              packageForLinux: '$(Pipeline.Workspace)/WebApp/ContosoUniversity.WebApplication.zip'
              JSONFiles: '**/appsettings.json'

- stage: deploy_uat
  dependsOn: deploy_dev
  jobs:
  - deployment: DeployDev
    displayName: deploy to uat
    variables:
      Infos.Ambiente: 'HML'
      Api.Address: 'https://$(WebApiName)-uat.azurewebsites.net'
      ConnectionStrings.ContosoUniversityAPIContext: 'Server=tcp:contosouniversityexampleserver.database.windows.net,1433;Initial Catalog=contosouniversity;Persist Security Info=False;User ID=leandro;Password=#P@ssw0rd2022#;MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;'
      Infos.Versao: $(Build.BuildNumber)
    environment: 'contosouniversity-uat'
    strategy:
      runOnce:
        deploy:
          steps:
          - download: current
            artifact: WebApp

          - task: AzureRmWebAppDeployment@4
            displayName: 'ContosoUniversityExample Api'
            inputs:
              azureSubscription: 'MS Internal'
              WebAppName: $(WebApiName)
              deployToSlotOrASE: true
              ResourceGroupName: 'RG_ContosoUniversity'
              SlotName: uat
              packageForLinux: '$(Pipeline.Workspace)/WebApp/ContosoUniversity.API.zip'
              JSONFiles: '**/appsettings.json'

          - task: AzureRmWebAppDeployment@4
            displayName: 'ContosoUniversityExample WebApp'
            inputs:
              azureSubscription: 'MS Internal'
              WebAppName: $(WebAppName)
              deployToSlotOrASE: true
              ResourceGroupName: 'RG_ContosoUniversity'
              SlotName: uat
              packageForLinux: '$(Pipeline.Workspace)/WebApp/ContosoUniversity.WebApplication.zip'
              JSONFiles: '**/appsettings.json'

- stage: deploy_prd
  dependsOn: 
   - deploy_hml
   - deploy_uat
  jobs:
  - deployment: DeployPrd
    displayName: deploy to prd
    variables:
      Infos.Ambiente: 'PRD'
      Api.Address: 'https://$(WebApiName).azurewebsites.net'
      ConnectionStrings.ContosoUniversityAPIContext: 'Server=tcp:contosouniversityexampleserver.database.windows.net,1433;Initial Catalog=contosouniversity;Persist Security Info=False;User ID=leandro;Password=#P@ssw0rd2022#;MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;'
      Infos.Versao: $(Build.BuildNumber)
    environment: 'contosouniversity-prd'
    strategy:
      runOnce:
        deploy:
          steps:
          - download: current
            artifact: WebApp

          - task: AzureRmWebAppDeployment@4
            displayName: 'ContosoUniversityExample Api'
            inputs:
              ConnectionType: 'AzureRM'
              azureSubscription: 'MS Internal'
              appType: 'webApp'
              WebAppName: $(WebApiName)
              packageForLinux: '$(Pipeline.Workspace)/WebApp/ContosoUniversity.API.zip'
              JSONFiles: '**/appsettings.json'
          
          - task: AzureRmWebAppDeployment@4
            displayName: 'ContosoUniversityExample WebApp'
            inputs:
              ConnectionType: 'AzureRM'
              azureSubscription: 'MS Internal'
              appType: 'webApp'
              WebAppName: $(WebAppName)
              packageForLinux: '$(Pipeline.Workspace)/WebApp/ContosoUniversity.WebApplication.zip'
              JSONFiles: '**/appsettings.json'